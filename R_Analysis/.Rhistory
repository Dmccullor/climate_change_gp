q()
q()
q()
r --version
R --version
q()
q()
x <-3
numlist <- (0,1,2,3,4,5,6,7,8,9)
numlist <- c(0,1,2,3,4,5,6,7,8,9)
? read.csv
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv', check.names=f, stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv', check.names=f, stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
x <- 3
x <- 5
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
setwd(01_Demo) function
getwd (get working directory)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
# Assign months to precipitation as names
names(precipitation) <- months
# Assign months to precipitation as names
names(precipitation) <- months
# Assign months to precipitation as names
names(precipitation) <- months
# Assign months to precipitation as names
names(precipitation) <- months
# Months of the year
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
# Average rainfall/precipitation in NYC during each month
precipitation <- c(3.9, 2.9, 4.1, 3.9, 4.5, 3.5, 4.5, 4.1, 4.0, 3.4, 3.8, 3.6)
print(months)
print(precipitation)
# Assign months to precipitation as names
names(precipitation) <- months
# Display precipitation
print(precipitation)
# Display names of precipitation
print(names(precipitation))
mar_precipitation <- precipitation["Mar"]
print(mar_precipitation)
mar_precipitation <- precipitation[["Mar"]
print(mar_precipitation)
mar_precipitation <- precipitation[["Mar"]]
print(mar_precipitation)
mar_precipitation <- precipitation["Mar"]
print(mar_precipitation)
# Display summary data of precipitation
summary(precipitation)
precipitation_summary <- summary(precipitation)
# Access features of a summary
precipitation_summary["Min."]
precipitation_summary["Mean"]
# Display the standard deviation
sd(precipitation)
# Round SD to two digits
stdev <- sd(precipitation)
round(stdev, 2)
precipitation %>% sd()
3.141592653 %>% round(2)
# Determine the length of a vector
length(precipitation)
# Display the sum of a vector
yearly_precipitation <- sum(precipitation)
yearly_precipitation
precipitation %>% length()
yearly_precipitation2 <- precipitation %>% sum()
print(yearly_precipitation2)
read.csv(file=data_file.csv',check.names=F,stringsAsFactors = F)
# DELIVERABLE 3
?t.test()
read.csv(file=data_file.csv',check.names=F,stringsAsFactors = F)
read(file=data_file.csv')
#To determine if PSI across all lots is different from population mean
t.test(Suspension_Coil_Data$PSI,mu=1500)
read.csv(file=data_file.csv',check.names=F,stringsAsFactors = F)
read.csv(file=data_file.csv',check.names=F,stringsAsFactors = F)
read(file=data_file.csv')
csv(file=data_file.csv',header=T)
read.csv(check.names=F,stringsAsFactors = F)
read.csv(check.names=F,stringsAsFactors = F)
read(file=data_file.csv',check.names=F,stringsAsFactors = F)
read.csv(file=data_file.csv',stringsAsFactors = F)
read(file=data_file.csv',check.names=F,stringsAsFactors = F)
csv(file=data_file.csv',header=T)
> ?read.csv()
> ?read.csv()
?read.csv()
read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
csv(file=data_file.csv',header=T)
read.csv(file=demo.csv',check.names=F,stringsAsFactors = F)
setwd("~/")
read.csv(file=demo.csv',check.names=F,stringsAsFactors = F)
read.csv(file=demo.csv',check.names=F,stringsAsFactors = F)
setwd("~/R_Analysis/01_Demo")
read.csv(file=demo.csv',check.names=F,stringsAsFactors = F)
csv(file=demo.csv',header=T)
load("C:/Users/umabh/DataClass/climate_change_gp/group_project/.RData")
# Create a boxplot to check for outliers
boxplot(seadata)$out
# Label the outliers
ggbetweenstats(seadata,
north_extent, gsml_gia, outlier.tagging = TRUE)
# Import the ggststasplot library
library(ggstatsplot)
# install the package
install.packages("ggstatsplot")
# Import the ggststasplot library
library(ggstatsplot)
# Label the outliers
ggbetweenstats(seadata,
north_extent, gsml_gia, outlier.tagging = TRUE)
# Label the outliers
ggbetweenstats(seadata,
north_extent, gmsl_gia, outlier.tagging = TRUE)
Q <- quantile(seadata$breaks, probs=c(.25, .75), na.rm = FALSE)
#quantile() function to find the 25th and the 75th percentile of the dataset
Q <- quantile(seadata$breaks, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(seadata$breaks)
iqr <- IQR(seadata$breaks)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
# Remove the outliers from dataset
eliminated<- subset(seadata, seadata$breaks > (Q[1] - 1.5*iqr) & seadata$breaks < (Q[2]+1.5*iqr))
#visualize distribution using density plot
ggplot(seadata,aes(x=north_extent)) + geom_density()
#visualize distribution using density plot
ggplot(seadata,aes(x=north_extent)) + geom_density()
#visualize distribution using density plot
ggplot(seadata,aes(x=north_extent)) + geom_density()
library(ggplot2)
library(ggplot2)
install.packages("tidyverse")
install.packages("tidyverse")
#visualize distribution using density plot
ggplot(seadata,aes(x=north_extent)) + geom_density()
#visualize distribution using density plot
ggplot(seadata,aes(x=gmsl_gia)) + geom_density()
# create a linear regression model
lm(gmsl_gia ~ north_extent,seadata)
#import dataset into ggplot2
plt <- ggplot(seadata,aes(x=north_extent,y=gmsl_gia))
#plot scatter and linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
# Remove the outliers from dataset
eliminated<- subset(seadata, seadata$breaks > (Q[1] - 1.5*iqr) & seadata$breaks < (Q[2]+1.5*iqr))
# Remove the outliers from dataset
eliminated<- subset(seadata, seadata$breaks > (Q[1] - 1.5*iqr) & seadata$breaks < (Q[2]+1.5*iqr))
library(RPostgreSQL)
## Loading required package: DBI
pg=dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="LearnProgramming1!",
host="localhost", port=5432, dbname="group_project")
#list all the tables available in the PostGreSQL Database
dbListTables(con)
# Read the table of interest seadata
seadata = dbReadTable(con, "seadata")
summary(seadata)
library(ggplot2)
# Simple Scatterplot
ggplot(seadata) +
geom_point(aes(x = year, y= north_extent))
# Simple Scatterplot 2
ggplot(seadata) +
geom_point(aes(x = year, y= gmsl_gia))
# Simple Scatterplot 3
ggplot(seadata) +
geom_point(aes(x = north_extent, y= gmsl_gia))
# Create a boxplot to check for outliers
boxplot(seadata)$out
#quantile() function to find the 25th and the 75th percentile of the dataset
Q <- quantile(seadata$breaks, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(seadata$breaks)
up <-  Q[2]+1.5*iqr # Upper Range
low<- Q[1]-1.5*iqr # Lower Range
# Remove the outliers from dataset
eliminated<- subset(seadata, seadata$breaks > (Q[1] - 1.5*iqr) & seadata$breaks < (Q[2]+1.5*iqr))
#visualize distribution using density plot
ggplot(seadata,aes(x=north_extent)) + geom_density()
#visualize distribution using density plot
ggplot(seadata,aes(x=gmsl_gia)) + geom_density()
# shapiro test for checking normalcy of data
shapiro.test(seadata$north_extent)
shapiro.test(seadata$gmsl_gia)
# calculate the correlation coefficient
cor(seadata$north_extent,seadata$gmsl_gia)
# create a linear regression model
lm(gmsl_gia ~ north_extent,seadata)
source("C:/Users/umabh/DataClass/climate_change_gp/group_project/group_project_linear_regression.R")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
# create a linear regression model
lm(gmsl_gia ~ north_extent,seadata)
#create linear model
model <- lm(gmsl_gia ~ north_extent,seadata)
#create linear model
model <- lm(gmsl_gia ~ north_extent,seadata)
#create linear model
model <- lm(gmsl_gia ~ north_extent,seadata)
#determine y-axis values from linear model
yvals <- model$coefficients['north_extent']*seadata$north_extent +
model$coefficients['(Intercept)']
#import dataset into ggplot2
plt <- ggplot(seadata,aes(x=north_extent,y=gmsl_gia))
#plot scatter and linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
setwd("C:/Users/umabh/DataClass/climate_change_gp/R_Analysis")
